package grifts

import (
	"eclient/actions"
	"fmt"
	"os"

	"github.com/gobuffalo/buffalo"
)

func init() {
	buffalo.Grifts(actions.App())
	InitEnv()
}

// InitEnv 初始化 env文件
func InitEnv() {
	_, err := os.Stat(".env.example")
	if err != nil {
		fmt.Println("文件还未初始化")
	}
	if os.IsExist(err) {
		fmt.Println("文件已初始化")
	}
	f, err := os.Create(".env.example")
	if err != nil {
		fmt.Println("env文件创建失败")
	}
	defer f.Close()
	defaultStr := fmt.Sprintf(
		`# This .env file was generated by buffalo, add here the env variables you need 
# buffalo to load into the ENV on application startup so your application works correctly.
# To add variables use KEY=VALUE format, you can later retrieve this in your application
# by using os.Getenv("KEY").
#
# Example:
# DATABASE_PASSWORD=XXXXXXXXX
# SESSION_SECRET=XXXXXXXXX
# SMTP_SERVER=XXXXXXXXX
# 地址端口
ADDR= #如 0.0.0.0
PORT= 80
GO_ENV=development
# 邮件配置
SMTP_PORT=587
SMTP_HOST=smtp.qq.com
SMTP_USER=
SMTP_PASSWORD= #此处为 密匙 ssl加密方式
####

`)
	bs := []byte(defaultStr)
	_, err = f.Write(bs)
	if err != nil {
		fmt.Println("env文件写入失败")
	}
	fmt.Println("env文件生成成功")
}
